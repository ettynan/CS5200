package blog.dal;

import blog.model.*;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;


/**
 * Data access object (DAO) class to interact with the underlying FoodCart table in MySQL
 * instance. 
 */
public class FoodCartDao extends RestaurantsDao {
	// Single pattern: instantiation is limited to one object.
	private static FoodCartDao instance = null;
	protected FoodCartDao() {
		super();
	}
	public static FoodCartDao getInstance() {
		if(instance == null) {
			instance = new FoodCartDao();
		}
		return instance;
	}

	/**
	 * Save the FoodCart instance by storing it in your MySQL instance.
	 * This runs a INSERT statement.
	 */
	public FoodCart create(FoodCart foodCart) throws SQLException {
		
		create(new Restaurants(foodCart.getRestaurantId(), foodCart.getName(), foodCart.getDescription(), foodCart.getMenu(), foodCart.getHours(),
				foodCart.isActive(), foodCart.getCuisine(), foodCart.getStreet1(), foodCart.getStreet2(), foodCart.getCity(), foodCart.getState(),
				foodCart.getZip(), foodCart.getCompanyName()));

		
		String insertFCR = "INSERT INTO FoodCartRestaurant(RestaurantId, Licensed) VALUES(?,?)";
		Connection connection = null;
		PreparedStatement insertStmt = null;
		try {
			connection = connectionManager.getConnection();
			insertStmt = connection.prepareStatement(insertFCR);
	        insertStmt.setInt(1, (foodCart.getRestaurantId()));
	        insertStmt.setBoolean(2, (foodCart.isLicensed()));
			insertStmt.executeUpdate();
			
			return foodCart;
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(connection != null) {
				connection.close();
			}
			if(insertStmt != null) {
				insertStmt.close();
			}
		}
	}

	/**
	 * Delete the FoodCart instance.
	 * This runs a DELETE statement.
	 */
	public FoodCart delete(FoodCart foodCart) throws SQLException {
		String deleteFCR = "DELETE FROM FoodCartRestaurant WHERE RestaurantId=?;";
		Connection connection = null;
		PreparedStatement deleteStmt = null;
		try {
			connection = connectionManager.getConnection();
			deleteStmt = connection.prepareStatement(deleteFCR);
			deleteStmt.setInt(1, foodCart.getRestaurantId());
			int affectedRows = deleteStmt.executeUpdate();
			if (affectedRows == 0) {
				throw new SQLException("No records available to delete for RestaurantId=" + foodCart.getRestaurantId());
			}
			super.delete(foodCart);
			return null;
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(connection != null) {
				connection.close();
			}
			if(deleteStmt != null) {
				deleteStmt.close();
			}
		}
	}

	/**
	 * Get the FoodCart record by fetching it from your MySQL instance.
	 * This runs a SELECT statement and returns a single FoodCart instance.
	 */
	public FoodCart getFoodCartById(int restaurantId) throws SQLException {
		 String selectFCR = "SELECT fcr.RestaurantId, Name, Description, Menu, Hours, Active, Cuisine, Street1,"
	                + "Street2, City, State, Zip, CompanyName, Licensed FROM FoodCartRestaurant AS fcr JOIN Restaurants "
	                + "on fcr.RestaurantId=Restaurants.RestaurantId WHERE fcr.RestaurantId=?;";
		
//		String selectFCR = "SELECT fcr.RestaurantId, Name, Description, Menu, Hours, Active, Cuisine, Street1,"
//				+ "Street2, City, State, Zip, CompanyName, Licensed FROM FoodCartRestaurant AS fcr JOIN Restaurants"
//				+ "on fcr.RestaurantId=Restaurants.RestaurantId WHERE fcr.RestaurantId=?;";
		Connection connection = null;
		PreparedStatement selectStmt = null;
		ResultSet results = null;
		try {
			connection = connectionManager.getConnection();
			selectStmt = connection.prepareStatement(selectFCR);
			selectStmt.setInt(1, restaurantId);
			results = selectStmt.executeQuery();
			if(results.next()) {
                int restId = results.getInt("fcr.RestaurantId");
                String name = results.getString("Name");
                String desc = results.getString("Description");
                String menu = results.getString("Menu");
                String hours = results.getString("Hours");
                Boolean active = results.getBoolean("Active");
                Restaurants.CuisineType ct = Restaurants.CuisineType.valueOf(results.getString("CuisineType"));
                String street1 = results.getString("Street1");
                String street2 = results.getString("Street2");
                String city = results.getString("City");
                String state = results.getString("State");
                int zip = results.getInt("Zip");                
                String companyName = results.getString("CompanyName");
                boolean licensed = results.getBoolean("Licensed");
                FoodCart foodCart = new FoodCart(restId, name, desc, menu, hours, active, ct, street1, street2, city, state, zip, companyName, licensed);
                return foodCart;
            }
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(connection != null) {
				connection.close();
			}
			if(selectStmt != null) {
				selectStmt.close();
			}
			if(results != null) {
				results.close();
			}
		}
		return null;
	}
	
	public List<FoodCart> getFoodCartByCompanyName(String companyName) throws SQLException {
		List<FoodCart> foodCart = new ArrayList<FoodCart>();
		String selectFCR =  "SELECT fcr.RestaurantId, Name, Description, Menu, Hours, Active, Cuisine, Street1,"
        + "Street2, City, State, Zip, CompanyName, Licensed FROM FoodCartRestaurant AS tor JOIN Restaurants on fcr.RestaurantId=Restaurants.RestaurantId "
        + "WHERE Restaurants.CompanyName=?;";
		
//		List<FoodCart> foodCart = new ArrayList<FoodCart>();
//		String selectFCR = "SELECT fcr.RestaurantId, Name, Description, Menu, Hours, Active, Cuisine, Street1,"
//				+ "Street2, City, State, Zip, CompanyName, Licensed FROM FoodCartRestaurant AS fcr JOIN Restaurants"
//				+ "on fcr.RestaurantId=Restaurants.RestaurantId WHERE Restaurants.CompanyName=?;";
//		
		Connection connection = null;
		PreparedStatement selectStmt = null;
		ResultSet results = null;
		try {
			connection = connectionManager.getConnection();
			selectStmt = connection.prepareStatement(selectFCR);
			selectStmt.setString(1, companyName);
			results = selectStmt.executeQuery();
			while(results.next()) {
				int restaurantId = results.getInt("RestaurantId");
				String name = results.getString("Name");
				String description = results.getString("Description");
				String menu = results.getString("Menu");
				String hours = results.getString("Hours");
				Boolean active = results.getBoolean("Active");
				Restaurants.CuisineType cuisineType = Restaurants.CuisineType.valueOf(results.getString("Cuisine"));
				String street1 = results.getString("Street1");
				String street2 = results.getString("Street2");
				String city = results.getString("City");
				String state = results.getString("State");
				int zip = results.getInt("Zip");
				String companyName1 = results.getString("CompanyName");
				Boolean licensed = results.getBoolean("Licensed");
				
				FoodCart foodCart1 = new FoodCart(restaurantId, name, description, menu, hours, active, 
						cuisineType, street1, street2, city, state, zip, companyName1, licensed);
				foodCart.add(foodCart1);
			}
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(connection != null) {
				connection.close();
			}
			if(selectStmt != null) {
				selectStmt.close();
			}
			if(results != null) {
				results.close();
			}
		}
		return foodCart;
	}
	
}
