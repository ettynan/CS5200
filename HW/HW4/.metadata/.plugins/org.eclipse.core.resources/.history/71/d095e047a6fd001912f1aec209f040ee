package blog.dal;
import blog.model.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
/**
 * Data access object (DAO) class to interact with the underlying Companies
 */
public class CompaniesDao {
    protected ConnectionManager connectionManager;

    // Single pattern: instantiation is limited to one object.
    private static CompaniesDao instance = null;
    protected CompaniesDao() {
        connectionManager = new ConnectionManager();
    }
    public static CompaniesDao getInstance() {
        if(instance == null) {
            instance = new CompaniesDao();
        }
        return instance;
    }
    /**
     * Save the Companies instance by storing it in your MySQL instance.
     * This runs a INSERT statement.
     */
    public Companies create(Companies company) throws SQLException {
        String insertCompany = "INSERT INTO Companies(CompanyName,About) VALUES(?,?);";
        Connection connection = null;
        PreparedStatement insertStmt = null;
        try {
            connection = connectionManager.getConnection();
            insertStmt = connection.prepareStatement(insertCompany);
            insertStmt.setString(1, company.getCompanyName());
            insertStmt.setString(2, company.getAbout());
            insertStmt.executeUpdate();

            return company;
        } catch (SQLException e) {
            e.printStackTrace();
            throw e;
        } finally {
            if(connection != null) {
                connection.close();
            }
            if(insertStmt != null) {
                insertStmt.close();
            }
        }
    }
    /**
     * Update the About of the Companies instance.
     * This runs a UPDATE statement.
     */
    public Companies updateAbout(Companies company, String newAbout) throws SQLException {
        String updateCompany = "UPDATE Companies SET About=? WHERE CompanyName=?;";
        Connection connection = null;
        PreparedStatement updateStmt = null;
        try {
            connection = connectionManager.getConnection();
            updateStmt = connection.prepareStatement(updateCompany);
            updateStmt.setString(1, company.getCompanyName());
            updateStmt.setString(2, newAbout);
            updateStmt.executeUpdate();

            // Update the about param before returning to the caller.
            company.setAbout(newAbout);
            return company;
        } catch (SQLException e) {
            e.printStackTrace();
            throw e;
        } finally {
            if(connection != null) {
                connection.close();
            }
            if(updateStmt != null) {
                updateStmt.close();
            }
        }
    } (edited)
    /**
     * Delete the Companies instance.
     * This runs a DELETE statement.
     */
    public Companies delete(Companies company) throws SQLException {
        String deleteCompany = "DELETE FROM Companies WHERE CompanyName=?;";
        Connection connection = null;
        PreparedStatement deleteStmt = null;
        try {
            connection = connectionManager.getConnection();
            deleteStmt = connection.prepareStatement(deleteCompany);
            deleteStmt.setString(1, company.getCompanyName());
            deleteStmt.executeUpdate();
            // Return null so the caller can no longer operate on the Persons instance.
            return null;
        } catch (SQLException e) {
            e.printStackTrace();
            throw e;
        } finally {
            if(connection != null) {
                connection.close();
            }
            if(deleteStmt != null) {
                deleteStmt.close();
            }
        }
    }
    /**
     * Get the Companies record by fetching it from your MySQL instance.
     * This runs a SELECT statement and returns a single Persons instance.
     */
    public Companies getCompanyByCompanyName(String companyName) throws SQLException {
        String selectCompany = "SELECT CompanyName, About FROM Companies WHERE CompanyName=?;";
        Connection connection = null;
        PreparedStatement selectStmt = null;
        ResultSet results = null;
        try {
            connection = connectionManager.getConnection();
            selectStmt = connection.prepareStatement(selectCompany);
            selectStmt.setString(1, companyName);
            results = selectStmt.executeQuery();
            if(results.next()) {
                String resultCompanyName = results.getString("CompanyName");
                String about = results.getString("About");
                Companies company = new Companies(resultCompanyName, about);
                return company;
            }
        } catch (SQLException e) {
            e.printStackTrace();
            throw e;
        } finally {
            if(connection != null) {
                connection.close();
            }
            if(selectStmt != null) {
                selectStmt.close();
            }
            if(results != null) {
                results.close();
            }
        }
        return null;
    }
}